{"ast":null,"code":"import React,{useState}from'react';import{NavLink,Navigate}from'react-router-dom';import{Button,Form,Grid,Segment,Message}from'semantic-ui-react';import{useAuth}from'../context/AuthContext';import{backApi}from'../misc/BackApi';import{parseJwt,handleLogError}from'../misc/Helpers';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Signup(){const Auth=useAuth();const isLoggedIn=Auth.userIsAuthenticated();const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[name,setName]=useState('');const[email,setEmail]=useState('');const[isError,setIsError]=useState(false);const[errorMessage,setErrorMessage]=useState('');const handleInputChange=(e,_ref)=>{let{name,value}=_ref;if(name==='username'){setUsername(value);}else if(name==='password'){setPassword(value);}else if(name==='name'){setName(value);}else if(name==='email'){setEmail(value);}};const handleSubmit=async e=>{e.preventDefault();if(!(username&&password&&name&&email)){setIsError(true);setErrorMessage('Please, inform all fields!');return;}const user={username,password,name,email};try{const response=await backApi.signup(user);const{accessToken}=response.data;const data=parseJwt(accessToken);const authenticatedUser={data,accessToken};Auth.userLogin(authenticatedUser);setUsername('');setPassword('');setName('');setEmail('');setIsError(false);setErrorMessage('');}catch(error){handleLogError(error);if(error.response&&error.response.data){const errorData=error.response.data;let errorMessage='Invalid fields';if(errorData.status===409){errorMessage=errorData.message;}else if(errorData.status===400){errorMessage=errorData.errors[0].defaultMessage;}setIsError(true);setErrorMessage(errorMessage);}}};if(isLoggedIn){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsx(Grid,{textAlign:\"center\",children:/*#__PURE__*/_jsxs(Grid.Column,{style:{maxWidth:450},children:[/*#__PURE__*/_jsx(Form,{size:\"large\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Segment,{children:[/*#__PURE__*/_jsx(Form.Input,{fluid:true,autoFocus:true,name:\"username\",icon:\"user\",iconPosition:\"left\",placeholder:\"Username\",value:username,onChange:handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"password\",icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",type:\"password\",value:password,onChange:handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"name\",icon:\"address card\",iconPosition:\"left\",placeholder:\"Name\",value:name,onChange:handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"email\",icon:\"at\",iconPosition:\"left\",placeholder:\"Email\",value:email,onChange:handleInputChange}),/*#__PURE__*/_jsx(Button,{color:\"violet\",fluid:true,size:\"large\",children:\"Signup\"})]})}),/*#__PURE__*/_jsxs(Message,{children:[\"Already have an account? \",/*#__PURE__*/_jsx(NavLink,{to:\"/login\",color:\"violet\",as:NavLink,children:\"Login\"})]}),isError&&/*#__PURE__*/_jsx(Message,{negative:true,children:errorMessage})]})});}export default Signup;","map":{"version":3,"names":["React","useState","NavLink","Navigate","Button","Form","Grid","Segment","Message","useAuth","backApi","parseJwt","handleLogError","jsx","_jsx","jsxs","_jsxs","Signup","Auth","isLoggedIn","userIsAuthenticated","username","setUsername","password","setPassword","name","setName","email","setEmail","isError","setIsError","errorMessage","setErrorMessage","handleInputChange","e","_ref","value","handleSubmit","preventDefault","user","response","signup","accessToken","data","authenticatedUser","userLogin","error","errorData","status","message","errors","defaultMessage","to","textAlign","children","Column","style","maxWidth","size","onSubmit","Input","fluid","autoFocus","icon","iconPosition","placeholder","onChange","type","color","as","negative"],"sources":["/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/home/Signup.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { NavLink, Navigate } from 'react-router-dom'\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react'\nimport { useAuth } from '../context/AuthContext'\nimport { backApi } from '../misc/BackApi'\nimport { parseJwt, handleLogError } from '../misc/Helpers'\n\nfunction Signup() {\n  const Auth = useAuth()\n  const isLoggedIn = Auth.userIsAuthenticated()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isError, setIsError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleInputChange = (e, { name, value }) => {\n    if (name === 'username') {\n      setUsername(value)\n    } else if (name === 'password') {\n      setPassword(value)\n    } else if (name === 'name') {\n      setName(value)\n    } else if (name === 'email') {\n      setEmail(value)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!(username && password && name && email)) {\n      setIsError(true)\n      setErrorMessage('Please, inform all fields!')\n      return\n    }\n\n    const user = { username, password, name, email }\n\n    try {\n      const response = await backApi.signup(user)\n      const { accessToken } = response.data\n      const data = parseJwt(accessToken)\n      const authenticatedUser = { data, accessToken }\n\n      Auth.userLogin(authenticatedUser)\n\n      setUsername('')\n      setPassword('')\n      setName('')\n      setEmail('')\n      setIsError(false)\n      setErrorMessage('')\n    } catch (error) {\n      handleLogError(error)\n      if (error.response && error.response.data) {\n        const errorData = error.response.data\n        let errorMessage = 'Invalid fields'\n        if (errorData.status === 409) {\n          errorMessage = errorData.message\n        } else if (errorData.status === 400) {\n          errorMessage = errorData.errors[0].defaultMessage\n        }\n        setIsError(true)\n        setErrorMessage(errorMessage)\n      }\n    }\n  }\n\n  if (isLoggedIn) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <Grid textAlign='center'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Form size='large' onSubmit={handleSubmit}>\n          <Segment>\n            <Form.Input\n              fluid\n              autoFocus\n              name='username'\n              icon='user'\n              iconPosition='left'\n              placeholder='Username'\n              value={username}\n              onChange={handleInputChange}\n            />\n            <Form.Input\n              fluid\n              name='password'\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n              value={password}\n              onChange={handleInputChange}\n            />\n            <Form.Input\n              fluid\n              name='name'\n              icon='address card'\n              iconPosition='left'\n              placeholder='Name'\n              value={name}\n              onChange={handleInputChange}\n            />\n            <Form.Input\n              fluid\n              name='email'\n              icon='at'\n              iconPosition='left'\n              placeholder='Email'\n              value={email}\n              onChange={handleInputChange}\n            />\n            <Button color='violet' fluid size='large'>Signup</Button>\n          </Segment>\n        </Form>\n        <Message>{`Already have an account? `}\n          <NavLink to=\"/login\" color='violet' as={NavLink}>Login</NavLink>\n        </Message>\n        {isError && <Message negative>{errorMessage}</Message>}\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default Signup"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}