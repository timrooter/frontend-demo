{"ast":null,"code":"var _jsxFileName = \"/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/user/Transfer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button, Dropdown, Message } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { backApi } from '../misc/BackApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transfer = () => {\n  _s();\n  const {\n    getUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [currency, setCurrency] = useState('');\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState(null);\n  const handleTransfer = () => {\n    const transactionData = {\n      toUsername: username,\n      amount,\n      currency,\n      transactionType: 'DIRECT_TRANSFER_TO_WALLET'\n    };\n    navigate('/confirm-transaction', {\n      state: {\n        transactionDetails: transactionData\n      }\n    });\n  };\n  const currencyOptions = [{\n    key: 'usd',\n    value: 'usd',\n    text: 'USD'\n  }, {\n    key: 'bitcoin',\n    value: 'bitcoin',\n    text: 'Bitcoin'\n  }, {\n    key: 'ethereum',\n    value: 'ethereum',\n    text: 'Ethereum'\n  }, {\n    key: 'binancecoin',\n    value: 'binancecoin',\n    text: 'BinanceCoin'\n  }, {\n    key: 'solana',\n    value: 'solana',\n    text: 'Solana'\n  }, {\n    key: 'ripple',\n    value: 'ripple',\n    text: 'Ripple'\n  }, {\n    key: 'tether',\n    value: 'tether',\n    text: 'Tether'\n  }, {\n    key: 'kzt',\n    value: 'kzt',\n    text: 'KZT'\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleTransfer,\n      style: {\n        maxWidth: '400px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipient Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Select Currency\",\n          fluid: true,\n          selection: true,\n          options: currencyOptions,\n          value: currency,\n          onChange: (e, {\n            value\n          }) => setCurrency(value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Amount\",\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"violet\",\n        fluid: true,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        negative: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Transfer, \"AKvNuOMVOAN+Tnzfjxei0LY7/lE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","Container","Form","Button","Dropdown","Message","useAuth","backApi","handleLogError","useNavigate","jsxDEV","_jsxDEV","Transfer","_s","getUser","navigate","username","setUsername","currency","setCurrency","amount","setAmount","error","setError","handleTransfer","transactionData","toUsername","transactionType","state","transactionDetails","currencyOptions","key","value","text","children","onSubmit","style","maxWidth","margin","Field","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","required","fluid","selection","options","type","color","negative","_c","$RefreshReg$"],"sources":["/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/user/Transfer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, Dropdown, Message } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { backApi } from '../misc/BackApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { useNavigate } from 'react-router-dom';\n\nconst Transfer = () => {\n    const { getUser } = useAuth();\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [currency, setCurrency] = useState('');\n    const [amount, setAmount] = useState('');\n    const [error, setError] = useState(null);\n\n    const handleTransfer = () => {\n        const transactionData = {\n            toUsername: username,\n            amount,\n            currency,\n            transactionType: 'DIRECT_TRANSFER_TO_WALLET'\n        };\n        navigate('/confirm-transaction', { state: { transactionDetails: transactionData } });\n    };\n\n    const currencyOptions = [\n        { key: 'usd', value: 'usd', text: 'USD' },\n        { key: 'bitcoin', value: 'bitcoin', text: 'Bitcoin' },\n        { key: 'ethereum', value: 'ethereum', text: 'Ethereum' },\n        { key: 'binancecoin', value: 'binancecoin', text: 'BinanceCoin' },\n        { key: 'solana', value: 'solana', text: 'Solana' },\n        { key: 'ripple', value: 'ripple', text: 'Ripple' },\n        { key: 'tether', value: 'tether', text: 'Tether' },\n        { key: 'kzt', value: 'kzt', text: 'KZT' },\n    ];\n\n    return (\n        <Container>\n            <Form onSubmit={handleTransfer} style={{ maxWidth: '400px', margin: '0 auto' }}>\n                <Form.Field>\n                    <label>Recipient Username</label>\n                    <input placeholder='Username' value={username} onChange={(e) => setUsername(e.target.value)} required />\n                </Form.Field>\n                <Form.Field>\n                    <label>Currency</label>\n                    <Dropdown\n                        placeholder='Select Currency'\n                        fluid\n                        selection\n                        options={currencyOptions}\n                        value={currency}\n                        onChange={(e, { value }) => setCurrency(value)}\n                        required\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>Amount</label>\n                    <input placeholder='Amount' type='number' value={amount} onChange={(e) => setAmount(e.target.value)} required />\n                </Form.Field>\n                <Button type='submit' color='violet' fluid>Send</Button>\n                {error && <Message negative>{error}</Message>}\n            </Form>\n        </Container>\n    );\n};\n\nexport default Transfer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}