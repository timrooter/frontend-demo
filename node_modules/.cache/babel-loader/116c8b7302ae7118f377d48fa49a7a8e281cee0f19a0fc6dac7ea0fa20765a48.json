{"ast":null,"code":"var _jsxFileName = \"/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/user/TransactionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Segment, Header, Message, List, Icon } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { backApi } from '../misc/BackApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsList = () => {\n  _s();\n  const {\n    getUser\n  } = useAuth();\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const user = getUser();\n        setCurrentUser(user.data);\n        const response = await backApi.getAllTransactions(user);\n        setTransactions(response.data);\n      } catch (error) {\n        handleLogError(error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTransactions();\n  }, [getUser]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Message, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Message, {\n    negative: true,\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h3\",\n        children: \"All Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), transactions.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: \"No transactions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        divided: true,\n        relaxed: true,\n        children: transactions.map(transaction => {\n          const isSender = transaction.fromUser.username === currentUser.username;\n          const iconColor = isSender ? 'red' : 'green';\n          const transactionType = isSender ? 'Sent' : 'Received';\n          const userLabel = isSender ? `To: ${transaction.toUser.username}` : `From: ${transaction.fromUser.username}`;\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            children: /*#__PURE__*/_jsxDEV(List.Content, {\n              children: [/*#__PURE__*/_jsxDEV(List.Header, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"exchange\",\n                  color: iconColor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 45\n                }, this), \" \", transactionType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: userLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: [\"Amount: \", transaction.amount, \" \", transaction.currency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: [\"Type: \", transaction.transactionType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: [\"Date: \", new Date(transaction.timestamp).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)\n          }, transaction.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionsList, \"pdyoh1HNIVYTLqJJmD1wtgy59Jk=\", false, function () {\n  return [useAuth];\n});\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","useState","useEffect","Container","Segment","Header","Message","List","Icon","useAuth","backApi","handleLogError","jsxDEV","_jsxDEV","TransactionsList","_s","getUser","transactions","setTransactions","error","setError","loading","setLoading","currentUser","setCurrentUser","fetchTransactions","user","data","response","getAllTransactions","message","children","fileName","_jsxFileName","lineNumber","columnNumber","negative","as","length","divided","relaxed","map","transaction","isSender","fromUser","username","iconColor","transactionType","userLabel","toUser","Item","Content","name","color","Description","amount","currency","Date","timestamp","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/user/TransactionsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Segment, Header, Message, List, Icon } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { backApi } from '../misc/BackApi';\nimport { handleLogError } from '../misc/Helpers';\n\nconst TransactionsList = () => {\n    const { getUser } = useAuth();\n    const [transactions, setTransactions] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            try {\n                const user = getUser();\n                setCurrentUser(user.data);\n                const response = await backApi.getAllTransactions(user);\n                setTransactions(response.data);\n            } catch (error) {\n                handleLogError(error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchTransactions();\n    }, [getUser]);\n\n    if (loading) return <Message>Loading...</Message>;\n    if (error) return <Message negative>Error: {error}</Message>;\n\n    return (\n        <Container>\n            <Segment>\n                <Header as=\"h3\">All Transactions</Header>\n                {transactions.length === 0 ? (\n                    <Message>No transactions found.</Message>\n                ) : (\n                    <List divided relaxed>\n                        {transactions.map(transaction => {\n                            const isSender = transaction.fromUser.username === currentUser.username;\n                            const iconColor = isSender ? 'red' : 'green';\n                            const transactionType = isSender ? 'Sent' : 'Received';\n                            const userLabel = isSender ? `To: ${transaction.toUser.username}` : `From: ${transaction.fromUser.username}`;\n\n                            return (\n                                <List.Item key={transaction.id}>\n                                    <List.Content>\n                                        <List.Header>\n                                            <Icon name='exchange' color={iconColor} /> {transactionType}\n                                        </List.Header>\n                                        <List.Description>\n                                            {userLabel}\n                                        </List.Description>\n                                        <List.Description>\n                                            Amount: {transaction.amount} {transaction.currency}\n                                        </List.Description>\n                                        <List.Description>\n                                            Type: {transaction.transactionType}\n                                        </List.Description>\n                                        <List.Description>\n                                            Date: {new Date(transaction.timestamp).toLocaleString()}\n                                        </List.Description>\n                                    </List.Content>\n                                </List.Item>\n                            );\n                        })}\n                    </List>\n                )}\n            </Segment>\n        </Container>\n    );\n};\n\nexport default TransactionsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}