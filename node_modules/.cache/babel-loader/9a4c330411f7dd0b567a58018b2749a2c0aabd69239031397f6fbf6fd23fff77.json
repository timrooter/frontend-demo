{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Container,Header,List,Message,Segment}from'semantic-ui-react';import{backApi}from'../misc/BackApi';import Footer from\"../misc/Footer\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExchangeRatesPage=()=>{const[exchangeRates,setExchangeRates]=useState({});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchExchangeRates=async()=>{try{const response=await backApi.getCurrentExchangeRates();setExchangeRates(response.data);setLoading(false);}catch(err){setError(err.message);setLoading(false);}};fetchExchangeRates();},[]);if(loading)return/*#__PURE__*/_jsx(Message,{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsxs(Message,{negative:true,children:[\"Error: \",error]});const filteredExchangeRates=Object.keys(exchangeRates).filter(currency=>!currency.startsWith('usd')&&!currency.startsWith('kzt')&&!currency.endsWith('kzt'));// Add USD to KZT rate\nconst usdToKztRate={'usd_to_kzt':exchangeRates['usd_to_kzt']};const displayRates=[...filteredExchangeRates.map(key=>({[key]:exchangeRates[key]})),usdToKztRate];return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Segment,{children:[/*#__PURE__*/_jsx(Header,{as:\"h1\",children:\"Current Exchange Rates\"}),/*#__PURE__*/_jsx(List,{divided:true,relaxed:true,children:displayRates.map(rate=>{const currency=Object.keys(rate)[0];return/*#__PURE__*/_jsx(List.Item,{children:/*#__PURE__*/_jsxs(List.Content,{children:[/*#__PURE__*/_jsx(List.Header,{children:currency.replace(/_/g,' ').toUpperCase()}),/*#__PURE__*/_jsx(List.Description,{children:/*#__PURE__*/_jsx(Header,{as:\"h2\",color:\"violet\",children:rate[currency]})})]})},currency);})})]}),/*#__PURE__*/_jsx(Footer,{})]});};export default ExchangeRatesPage;","map":{"version":3,"names":["React","useEffect","useState","Container","Header","List","Message","Segment","backApi","Footer","jsx","_jsx","jsxs","_jsxs","ExchangeRatesPage","exchangeRates","setExchangeRates","loading","setLoading","error","setError","fetchExchangeRates","response","getCurrentExchangeRates","data","err","message","children","negative","filteredExchangeRates","Object","keys","filter","currency","startsWith","endsWith","usdToKztRate","displayRates","map","key","as","divided","relaxed","rate","Item","Content","replace","toUpperCase","Description","color"],"sources":["/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/home/ExchangeRatesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Header, List, Message, Segment } from 'semantic-ui-react';\nimport { backApi } from '../misc/BackApi';\nimport Footer from \"../misc/Footer\";\n\nconst ExchangeRatesPage = () => {\n    const [exchangeRates, setExchangeRates] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchExchangeRates = async () => {\n            try {\n                const response = await backApi.getCurrentExchangeRates();\n                setExchangeRates(response.data);\n                setLoading(false);\n            } catch (err) {\n                setError(err.message);\n                setLoading(false);\n            }\n        };\n\n        fetchExchangeRates();\n    }, []);\n\n    if (loading) return <Message>Loading...</Message>;\n    if (error) return <Message negative>Error: {error}</Message>;\n\n    const filteredExchangeRates = Object.keys(exchangeRates).filter(\n        currency => !currency.startsWith('usd') && !currency.startsWith('kzt') && !currency.endsWith('kzt')\n    );\n\n    // Add USD to KZT rate\n    const usdToKztRate = { 'usd_to_kzt': exchangeRates['usd_to_kzt'] };\n    const displayRates = [...filteredExchangeRates.map(key => ({ [key]: exchangeRates[key] })), usdToKztRate];\n\n    return (\n        <Container>\n            <Segment>\n                <Header as=\"h1\">Current Exchange Rates</Header>\n                <List divided relaxed>\n                    {displayRates.map(rate => {\n                        const currency = Object.keys(rate)[0];\n                        return (\n                            <List.Item key={currency}>\n                                <List.Content>\n                                    <List.Header>{currency.replace(/_/g, ' ').toUpperCase()}</List.Header>\n                                    <List.Description>\n                                        <Header as=\"h2\" color=\"violet\">{rate[currency]}</Header>\n                                    </List.Description>\n                                </List.Content>\n                            </List.Item>\n                        );\n                    })}\n                </List>\n            </Segment>\n            <Footer />\n        </Container>\n    );\n};\n\nexport default ExchangeRatesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}