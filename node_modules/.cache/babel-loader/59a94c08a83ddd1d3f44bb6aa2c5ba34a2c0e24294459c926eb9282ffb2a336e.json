{"ast":null,"code":"var _jsxFileName = \"/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/user/TransactionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Segment, Header, Message, List, Icon } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { backApi } from '../misc/BackApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsList = () => {\n  _s();\n  const {\n    getUser\n  } = useAuth();\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const fetchUsernames = async transactions => {\n      const userRequests = transactions.map(transaction => Promise.all([backApi.getUserById(transaction.fromWalletId), backApi.getUserById(transaction.toWalletId)]).then(([fromUserResponse, toUserResponse]) => ({\n        ...transaction,\n        fromUsername: fromUserResponse.data.username,\n        toUsername: toUserResponse.data.username\n      })));\n      return Promise.all(userRequests);\n    };\n    const fetchTransactions = async () => {\n      try {\n        const user = getUser();\n        if (!user || !user.accessToken) {\n          throw new Error(\"User is not authenticated or accessToken is missing\");\n        }\n        setCurrentUser(user.data);\n        const response = await backApi.getAllTransactions(user);\n        const transactionsWithUsernames = await fetchUsernames(response.data);\n        setTransactions(transactionsWithUsernames);\n      } catch (error) {\n        handleLogError(error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTransactions();\n  }, [getUser]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Message, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Message, {\n    negative: true,\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h3\",\n        children: \"All Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), transactions.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: \"No transactions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        divided: true,\n        relaxed: true,\n        children: transactions.map(transaction => {\n          const isSender = transaction.fromWalletId === currentUser.walletId; // Assuming currentUser has walletId property\n          const iconColor = isSender ? 'red' : 'green';\n          const transactionType = isSender ? 'Sent' : 'Received';\n          const userLabel = isSender ? `To: ${transaction.toUsername}` : `From: ${transaction.fromUsername}`;\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            children: /*#__PURE__*/_jsxDEV(List.Content, {\n              children: [/*#__PURE__*/_jsxDEV(List.Header, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"exchange\",\n                  color: iconColor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 45\n                }, this), \" \", transactionType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: userLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: [\"Amount: \", transaction.amount, \" \", transaction.currency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n                children: [\"Type: \", transaction.transactionType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this)\n          }, transaction.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionsList, \"pdyoh1HNIVYTLqJJmD1wtgy59Jk=\", false, function () {\n  return [useAuth];\n});\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","useState","useEffect","Container","Segment","Header","Message","List","Icon","useAuth","backApi","handleLogError","jsxDEV","_jsxDEV","TransactionsList","_s","getUser","transactions","setTransactions","error","setError","loading","setLoading","currentUser","setCurrentUser","fetchUsernames","userRequests","map","transaction","Promise","all","getUserById","fromWalletId","toWalletId","then","fromUserResponse","toUserResponse","fromUsername","data","username","toUsername","fetchTransactions","user","accessToken","Error","response","getAllTransactions","transactionsWithUsernames","message","children","fileName","_jsxFileName","lineNumber","columnNumber","negative","as","length","divided","relaxed","isSender","walletId","iconColor","transactionType","userLabel","Item","Content","name","color","Description","amount","currency","id","_c","$RefreshReg$"],"sources":["/Users/timurinamkhojayev/Desktop/demo-crypto/order-ui/src/components/user/TransactionsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Segment, Header, Message, List, Icon } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { backApi } from '../misc/BackApi';\nimport { handleLogError } from '../misc/Helpers';\n\nconst TransactionsList = () => {\n    const { getUser } = useAuth();\n    const [transactions, setTransactions] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        const fetchUsernames = async (transactions) => {\n            const userRequests = transactions.map(transaction => (\n                Promise.all([\n                    backApi.getUserById(transaction.fromWalletId),\n                    backApi.getUserById(transaction.toWalletId)\n                ]).then(([fromUserResponse, toUserResponse]) => ({\n                    ...transaction,\n                    fromUsername: fromUserResponse.data.username,\n                    toUsername: toUserResponse.data.username\n                }))\n            ));\n\n            return Promise.all(userRequests);\n        };\n\n        const fetchTransactions = async () => {\n            try {\n                const user = getUser();\n                if (!user || !user.accessToken) {\n                    throw new Error(\"User is not authenticated or accessToken is missing\");\n                }\n                setCurrentUser(user.data);\n                const response = await backApi.getAllTransactions(user);\n                const transactionsWithUsernames = await fetchUsernames(response.data);\n                setTransactions(transactionsWithUsernames);\n            } catch (error) {\n                handleLogError(error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchTransactions();\n    }, [getUser]);\n\n    if (loading) return <Message>Loading...</Message>;\n    if (error) return <Message negative>Error: {error}</Message>;\n\n    return (\n        <Container>\n            <Segment>\n                <Header as=\"h3\">All Transactions</Header>\n                {transactions.length === 0 ? (\n                    <Message>No transactions found.</Message>\n                ) : (\n                    <List divided relaxed>\n                        {transactions.map(transaction => {\n                            const isSender = transaction.fromWalletId === currentUser.walletId;  // Assuming currentUser has walletId property\n                            const iconColor = isSender ? 'red' : 'green';\n                            const transactionType = isSender ? 'Sent' : 'Received';\n                            const userLabel = isSender ? `To: ${transaction.toUsername}` : `From: ${transaction.fromUsername}`;\n\n                            return (\n                                <List.Item key={transaction.id}>\n                                    <List.Content>\n                                        <List.Header>\n                                            <Icon name='exchange' color={iconColor} /> {transactionType}\n                                        </List.Header>\n                                        <List.Description>\n                                            {userLabel}\n                                        </List.Description>\n                                        <List.Description>\n                                            Amount: {transaction.amount} {transaction.currency}\n                                        </List.Description>\n                                        <List.Description>\n                                            Type: {transaction.transactionType}\n                                        </List.Description>\n                                        {/* Date field commented out as it's missing in the provided data */}\n                                        {/* <List.Description>\n                                            Date: {new Date(transaction.timestamp).toLocaleString()}\n                                        </List.Description> */}\n                                    </List.Content>\n                                </List.Item>\n                            );\n                        })}\n                    </List>\n                )}\n            </Segment>\n        </Container>\n    );\n};\n\nexport default TransactionsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}